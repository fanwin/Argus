version: '3.8'

services:
  # 主测试服务
  test-runner:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: argus-test-runner
    environment:
      - TEST_ENV=${TEST_ENV:-dev}
      - BROWSER=${BROWSER:-chrome}
      - HEADLESS=${HEADLESS:-true}
      - DISPLAY=:99
      - PYTHONPATH=/app
    volumes:
      - ./reports:/app/reports
      - ./configs:/app/configs
      - ./data:/app/data
    networks:
      - test-network
    depends_on:
      - selenium-hub
    command: pytest --alluredir=reports/allure-results -v

  # Selenium Grid Hub
  selenium-hub:
    image: selenium/hub:4.15.0
    container_name: selenium-hub
    ports:
      - "4444:4444"
      - "4442:4442"
      - "4443:4443"
    environment:
      - GRID_MAX_SESSION=16
      - GRID_BROWSER_TIMEOUT=300
      - GRID_TIMEOUT=300
    networks:
      - test-network

  # Chrome节点
  chrome-node:
    image: selenium/node-chrome:4.15.0
    container_name: chrome-node
    shm_size: 2gb
    environment:
      - HUB_HOST=selenium-hub
      - HUB_PORT=4444
      - NODE_MAX_INSTANCES=4
      - NODE_MAX_SESSION=4
    volumes:
      - /dev/shm:/dev/shm
    networks:
      - test-network
    depends_on:
      - selenium-hub

  # Firefox节点
  firefox-node:
    image: selenium/node-firefox:4.15.0
    container_name: firefox-node
    shm_size: 2gb
    environment:
      - HUB_HOST=selenium-hub
      - HUB_PORT=4444
      - NODE_MAX_INSTANCES=4
      - NODE_MAX_SESSION=4
    volumes:
      - /dev/shm:/dev/shm
    networks:
      - test-network
    depends_on:
      - selenium-hub

  # Edge节点
  edge-node:
    image: selenium/node-edge:4.15.0
    container_name: edge-node
    shm_size: 2gb
    environment:
      - HUB_HOST=selenium-hub
      - HUB_PORT=4444
      - NODE_MAX_INSTANCES=4
      - NODE_MAX_SESSION=4
    volumes:
      - /dev/shm:/dev/shm
    networks:
      - test-network
    depends_on:
      - selenium-hub

  # Allure报告服务
  allure-server:
    image: frankescobar/allure-docker-service:2.24.0
    container_name: allure-server
    ports:
      - "5050:5050"
    environment:
      - CHECK_RESULTS_EVERY_SECONDS=3
      - KEEP_HISTORY=1
      - KEEP_HISTORY_LATEST=25
    volumes:
      - ./reports/allure-results:/app/allure-results
      - ./reports/allure-report:/app/default-reports
    networks:
      - test-network

  # 数据库服务（用于测试数据）
  postgres:
    image: postgres:15
    container_name: test-postgres
    environment:
      - POSTGRES_DB=test_db
      - POSTGRES_USER=test_user
      - POSTGRES_PASSWORD=test_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - test-network

  # Redis服务（用于缓存测试数据）
  redis:
    image: redis:7-alpine
    container_name: test-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    networks:
      - test-network

  # 监控服务
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - test-network

  # Grafana仪表板
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    networks:
      - test-network
    depends_on:
      - prometheus

  # 日志收集服务
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - test-network

  # Kibana日志分析
  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    networks:
      - test-network
    depends_on:
      - elasticsearch

  # 文件服务器（用于测试文件上传）
  file-server:
    image: nginx:alpine
    container_name: file-server
    ports:
      - "8080:80"
    volumes:
      - ./test-files:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - test-network

networks:
  test-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data:
  elasticsearch_data:
